name: Build Production

on:
  push:
    tags:
      - v*.*.*

permissions:
  id-token: write
  contents: read

env:
  environment_name: production

jobs:
  build_push:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      image_digest: ${{ steps.build_and_push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ECR_REGISTRY }}

      - name: Build and Push Docker Image
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
#          Only building for AMD64 for now
#          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ github.ref_name }}

      - name: Push Image Digest to SSM
        run: |
          aws ssm put-parameter \
            --name "/apps/sample-django-app/${{ env.environment_name }}/image_digest" \
            --type "String" \
            --value "$digest" \
            --overwrite
        env:
          digest: ${{ steps.build_and_push.outputs.digest }}

  trigger_deploy:
    runs-on: ubuntu-latest
    needs: [build_test_push]
    steps:
      - name: Generate App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.DEPLOY_APP_ID }}
          private-key: ${{ secrets.DEPLOY_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "appdeploy"

      - name: Trigger Deploy Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          retries: 3
          retry-exempt-status-codes: 204
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'aodn',
              repo: 'appdeploy',
              workflow_id: 'deploy.yml',
              ref: 'main',
              inputs: {
                app_name: 'sample-django-app',
                environment: '${{ env.environment_name }}'
              }
            })
